## import packages
library(raster)
library(magrittr)
library(rgdal)
## custom functions
## read dlem binary input files
if(!exists("readDlemBin")) {
readDlemBin <- function(bin_file) {
bin_con <- file(bin_file, "rb")
data_nu <- readBin(bin_con, "double", n=354 * 720, size=4)
close(bin_con)
r <- matrix(data_nu, nrow=354, byrow=TRUE) %>%
raster(., xmn=-180, xmx=180, ymn=-90, ymx=90, crs="+proj=longlat +datum=WGS84")
return(r)
}
}
setwd("D:/Research_AU_EDGE/R/DLEM_output/dlem_biomeflux")
getwd()
{
## read dlem biomeflux using raw method
file_size <- file.info(dlem_biomeflux_file)$size
raw <- readBin(dlem_biomeflux_file, what="raw", n=file_size);
## wrap vector into matrix to accerate processing
nbr_of_records <- length(raw) %/% 61;
raw <-  matrix(raw, nrow=61*4, byrow=FALSE)
## read the first 7 variables of interger type
data_int <- lapply(1:7, FUN=function(var) {
ints <- readBin(con=as.vector(raw[(4*(var - 1) + 1): (4*var), ]), what="integer", size=4,
n=nbr_of_records/4)
return(ints)
})
## read the other variables of float type
data_float <- lapply(8:61, FUN=function(var) {
floats <- readBin(con=as.vector(raw[(4*(var - 1) + 1): (4*var), ]), what="double", size=4,
n=nbr_of_records/4)
return(floats)
})
biomeflux_df <- data.frame(do.call(cbind, data_int), do.call(cbind, data_float))
## var list
var_names <- c("Findex_auto", "Findex_input", "year", "month", "day",
"ecoid","pft","g_gpp", "g_npp", "g_mr", "g_gr", "g_rh",
"g_harvc", "g_harvn", "g_estabC", "g_estabN",
"crope_manage_C","crope_manage_N","g_manureC","g_manureN",
"C_burntflux", "CH4_burntflux", "CO_burntflux", "CO2_burntflux", "NMHC_burntflux",
"C_burntmort", "g_litleachDOC", "g_leach_DOC",
"g_leach_POC", "g_leach_DIC","g_ch4", "g_VOCisop", "g_VOCmono", "g_VOCovoc",
"g_VOCorvoc", "g_VOCco","g_nuptake", "g_NMin", "g_leakN", "g_leachNH4",
"g_leachNO3", "g_litleachDON", "g_leachDON", "g_leachPON",
"g_denitrif", "g_nitrif", "g_nFix", "g_Ndep", "g_NFer", "g_n2o", "g_no",
"g_nh3Emisn", "N_burntflux", "N2O_burntflux", "NOy_burntflux", "NH3_burntflux",
"N_burntmort","g_irrigation", "g_evap","g_intercp","g_trans"
)
names(biomeflux_df) <- var_names
rm(raw)
## read maskidx file
maskidx_r <- readDlemBin(maskidx_file)
## generate raster for a var at a day/mon/year
genVarStack <- function(id) {
biomeflux_df_ecoid <- subset(biomeflux_df, ecoid==id)
ecoid_s <- lapply(1:ncol(biomeflux_df_ecoid), FUN=function(col) {
var_r <- maskidx_r
var_r[var_r >=0] <- 0
var_r[var_r < 0] <- NA
ind <- which((maskidx_r[] %in% biomeflux_df_ecoid$Findex_input)==TRUE)
var_r[ind] <- biomeflux_df_ecoid[, col]
return(var_r)
})
ecoid_s <- do.call(stack, ecoid_s)
cat(id, "\n")
return(ecoid_s)
}
biomeflux_df_s <- lapply(unique(biomeflux_df$ecoid), genVarStack) %>% do.call(stack, .)
names(biomeflux_df_s) <- outer(var_names, unique(biomeflux_df$ecoid), paste, sep="_") %>% as.vector
return(biomeflux_df_s)
}
## read dlem biomeflux output
readDlemBiomeflux <- function(maskidx_file, dlem_biomeflux_file) {
## read dlem biomeflux using raw method
file_size <- file.info(dlem_biomeflux_file)$size
raw <- readBin(dlem_biomeflux_file, what="raw", n=file_size);
## wrap vector into matrix to accerate processing
nbr_of_records <- length(raw) %/% 61;
raw <-  matrix(raw, nrow=61*4, byrow=FALSE)
## read the first 7 variables of interger type
data_int <- lapply(1:7, FUN=function(var) {
ints <- readBin(con=as.vector(raw[(4*(var - 1) + 1): (4*var), ]), what="integer", size=4,
n=nbr_of_records/4)
return(ints)
})
## read the other variables of float type
data_float <- lapply(8:61, FUN=function(var) {
floats <- readBin(con=as.vector(raw[(4*(var - 1) + 1): (4*var), ]), what="double", size=4,
n=nbr_of_records/4)
return(floats)
})
biomeflux_df <- data.frame(do.call(cbind, data_int), do.call(cbind, data_float))
## var list
var_names <- c("Findex_auto", "Findex_input", "year", "month", "day",
"ecoid","pft","g_gpp", "g_npp", "g_mr", "g_gr", "g_rh",
"g_harvc", "g_harvn", "g_estabC", "g_estabN",
"crope_manage_C","crope_manage_N","g_manureC","g_manureN",
"C_burntflux", "CH4_burntflux", "CO_burntflux", "CO2_burntflux", "NMHC_burntflux",
"C_burntmort", "g_litleachDOC", "g_leach_DOC",
"g_leach_POC", "g_leach_DIC","g_ch4", "g_VOCisop", "g_VOCmono", "g_VOCovoc",
"g_VOCorvoc", "g_VOCco","g_nuptake", "g_NMin", "g_leakN", "g_leachNH4",
"g_leachNO3", "g_litleachDON", "g_leachDON", "g_leachPON",
"g_denitrif", "g_nitrif", "g_nFix", "g_Ndep", "g_NFer", "g_n2o", "g_no",
"g_nh3Emisn", "N_burntflux", "N2O_burntflux", "NOy_burntflux", "NH3_burntflux",
"N_burntmort","g_irrigation", "g_evap","g_intercp","g_trans"
)
names(biomeflux_df) <- var_names
rm(raw)
## read maskidx file
maskidx_r <- readDlemBin(maskidx_file)
## generate raster for a var at a day/mon/year
genVarStack <- function(id) {
biomeflux_df_ecoid <- subset(biomeflux_df, ecoid==id)
ecoid_s <- lapply(1:ncol(biomeflux_df_ecoid), FUN=function(col) {
var_r <- maskidx_r
var_r[var_r >=0] <- 0
var_r[var_r < 0] <- NA
ind <- which((maskidx_r[] %in% biomeflux_df_ecoid$Findex_input)==TRUE)
var_r[ind] <- biomeflux_df_ecoid[, col]
return(var_r)
})
ecoid_s <- do.call(stack, ecoid_s)
cat(id, "\n")
return(ecoid_s)
}
biomeflux_df_s <- lapply(unique(biomeflux_df$ecoid), genVarStack) %>% do.call(stack, .)
names(biomeflux_df_s) <- outer(var_names, unique(biomeflux_df$ecoid), paste, sep="_") %>% as.vector
return(biomeflux_df_s)
}
a <- readDlemBiomeflux(Brandbjerg_maskid.bin,yy2005m1.dlem)
a <- readDlemBiomeflux("Brandbjerg_maskid.bin","yy2005m1.dlem")
head(a)
head(a, 10)
a
var_names
var_names <- c("Findex_auto", "Findex_input", "year", "month", "day",
"ecoid","pft","g_gpp", "g_npp", "g_mr", "g_gr", "g_rh",
"g_harvc", "g_harvn", "g_estabC", "g_estabN",
"crope_manage_C","crope_manage_N","g_manureC","g_manureN",
"C_burntflux", "CH4_burntflux", "CO_burntflux", "CO2_burntflux", "NMHC_burntflux",
"C_burntmort", "g_litleachDOC", "g_leach_DOC",
"g_leach_POC", "g_leach_DIC","g_ch4", "g_VOCisop", "g_VOCmono", "g_VOCovoc",
"g_VOCorvoc", "g_VOCco","g_nuptake", "g_NMin", "g_leakN", "g_leachNH4",
"g_leachNO3", "g_litleachDON", "g_leachDON", "g_leachPON",
"g_denitrif", "g_nitrif", "g_nFix", "g_Ndep", "g_NFer", "g_n2o", "g_no",
"g_nh3Emisn", "N_burntflux", "N2O_burntflux", "NOy_burntflux", "NH3_burntflux",
"N_burntmort","g_irrigation", "g_evap","g_intercp","g_trans"
)
var_names
dlem_biomeflux_file <- "yy2005m1.dlem"
dlem_biomeflux_file
file.info(dlem_biomeflux_file)
file_size <- file.info(dlem_biomeflux_file)$size
file_size
raw <- readBin(dlem_biomeflux_file, what="raw", n=file_size);
raw
length(raw)
nbr_of_records <- length(raw) %/% 61
nbr_of_records
raw <- readBin(dlem_biomeflux_file, what="raw", n=file_size);
## wrap vector into matrix to accerate processing
nbr_of_records <- length(raw) %/% 61;
raw <-  matrix(raw, nrow=61*4, byrow=FALSE)
## read the first 7 variables of interger type
data_int <- lapply(1:7, FUN=function(var) {
ints <- readBin(con=as.vector(raw[(4*(var - 1) + 1): (4*var), ]), what="integer", size=4,
n=nbr_of_records/4)
return(ints)
})
## read the other variables of float type
data_float <- lapply(8:61, FUN=function(var) {
floats <- readBin(con=as.vector(raw[(4*(var - 1) + 1): (4*var), ]), what="double", size=4,
n=nbr_of_records/4)
return(floats)
})
biomeflux_df <- data.frame(do.call(cbind, data_int), do.call(cbind, data_float))
## var list
var_names <- c("Findex_auto", "Findex_input", "year", "month", "day",
"ecoid","pft","g_gpp", "g_npp", "g_mr", "g_gr", "g_rh",
"g_harvc", "g_harvn", "g_estabC", "g_estabN",
"crope_manage_C","crope_manage_N","g_manureC","g_manureN",
"C_burntflux", "CH4_burntflux", "CO_burntflux", "CO2_burntflux", "NMHC_burntflux",
"C_burntmort", "g_litleachDOC", "g_leach_DOC",
"g_leach_POC", "g_leach_DIC","g_ch4", "g_VOCisop", "g_VOCmono", "g_VOCovoc",
"g_VOCorvoc", "g_VOCco","g_nuptake", "g_NMin", "g_leakN", "g_leachNH4",
"g_leachNO3", "g_litleachDON", "g_leachDON", "g_leachPON",
"g_denitrif", "g_nitrif", "g_nFix", "g_Ndep", "g_NFer", "g_n2o", "g_no",
"g_nh3Emisn", "N_burntflux", "N2O_burntflux", "NOy_burntflux", "NH3_burntflux",
"N_burntmort","g_irrigation", "g_evap","g_intercp","g_trans"
)
names(biomeflux_df) <- var_names
rm(raw)
biomeflux_df
class(biomeflux_df)
maskidx_file <- "Brandbjerg_maskid.bin"
## read maskidx file
maskidx_r <- readDlemBin(maskidx_file)
maskidx_r
## custom functions
## read dlem binary input files
if(!exists("readDlemBin")) {
readDlemBin <- function(bin_file) {
bin_con <- file(bin_file, "rb")
data_nu <- readBin(bin_con, "double", n=1, size=4)
close(bin_con)
r <- matrix(data_nu, nrow=1, byrow=TRUE) %>%
raster(., xmn=-180, xmx=180, ymn=-90, ymx=90, crs="+proj=longlat +datum=WGS84")
return(r)
}
}
## read dlem biomeflux output
readDlemBiomeflux <- function(maskidx_file, dlem_biomeflux_file) {
## read dlem biomeflux using raw method
file_size <- file.info(dlem_biomeflux_file)$size
raw <- readBin(dlem_biomeflux_file, what="raw", n=file_size);
## wrap vector into matrix to accerate processing
nbr_of_records <- length(raw) %/% 61;
raw <-  matrix(raw, nrow=61*4, byrow=FALSE)
## read the first 7 variables of interger type
data_int <- lapply(1:7, FUN=function(var) {
ints <- readBin(con=as.vector(raw[(4*(var - 1) + 1): (4*var), ]), what="integer", size=4,
n=nbr_of_records/4)
return(ints)
})
## read the other variables of float type
data_float <- lapply(8:61, FUN=function(var) {
floats <- readBin(con=as.vector(raw[(4*(var - 1) + 1): (4*var), ]), what="double", size=4,
n=nbr_of_records/4)
return(floats)
})
biomeflux_df <- data.frame(do.call(cbind, data_int), do.call(cbind, data_float))
## var list
var_names <- c("Findex_auto", "Findex_input", "year", "month", "day",
"ecoid","pft","g_gpp", "g_npp", "g_mr", "g_gr", "g_rh",
"g_harvc", "g_harvn", "g_estabC", "g_estabN",
"crope_manage_C","crope_manage_N","g_manureC","g_manureN",
"C_burntflux", "CH4_burntflux", "CO_burntflux", "CO2_burntflux", "NMHC_burntflux",
"C_burntmort", "g_litleachDOC", "g_leach_DOC",
"g_leach_POC", "g_leach_DIC","g_ch4", "g_VOCisop", "g_VOCmono", "g_VOCovoc",
"g_VOCorvoc", "g_VOCco","g_nuptake", "g_NMin", "g_leakN", "g_leachNH4",
"g_leachNO3", "g_litleachDON", "g_leachDON", "g_leachPON",
"g_denitrif", "g_nitrif", "g_nFix", "g_Ndep", "g_NFer", "g_n2o", "g_no",
"g_nh3Emisn", "N_burntflux", "N2O_burntflux", "NOy_burntflux", "NH3_burntflux",
"N_burntmort","g_irrigation", "g_evap","g_intercp","g_trans"
)
names(biomeflux_df) <- var_names
rm(raw)
## read maskidx file
maskidx_r <- readDlemBin(maskidx_file)
## generate raster for a var at a day/mon/year
genVarStack <- function(id) {
biomeflux_df_ecoid <- subset(biomeflux_df, ecoid==id)
ecoid_s <- lapply(1:ncol(biomeflux_df_ecoid), FUN=function(col) {
var_r <- maskidx_r
var_r[var_r >=0] <- 0
var_r[var_r < 0] <- NA
ind <- which((maskidx_r[] %in% biomeflux_df_ecoid$Findex_input)==TRUE)
var_r[ind] <- biomeflux_df_ecoid[, col]
return(var_r)
})
ecoid_s <- do.call(stack, ecoid_s)
cat(id, "\n")
return(ecoid_s)
}
biomeflux_df_s <- lapply(unique(biomeflux_df$ecoid), genVarStack) %>% do.call(stack, .)
names(biomeflux_df_s) <- outer(var_names, unique(biomeflux_df$ecoid), paste, sep="_") %>% as.vector
return(biomeflux_df_s)
}
readDlemBiomeflux("Brandbjerg_maskid.bin","yy2005m1.dlem")
readDlemBin <- function(bin_file) {
bin_con <- file(bin_file, "rb")
data_nu <- readBin(bin_con, "double", n=1, size=4)
close(bin_con)
r <- matrix(data_nu, nrow=1, byrow=TRUE) %>%
raster(., xmn=-180, xmx=180, ymn=-90, ymx=90, crs="+proj=longlat +datum=WGS84")
return(r)
}
{
readDlemBin <- function(bin_file) {
bin_con <- file(bin_file, "rb")
data_nu <- readBin(bin_con, "double", n=1, size=4)
close(bin_con)
r <- matrix(data_nu, nrow=1, byrow=TRUE) %>%
raster(., xmn=-180, xmx=180, ymn=-90, ymx=90, crs="+proj=longlat +datum=WGS84")
return(r)
}
}
## read dlem biomeflux output
readDlemBiomeflux <- function(maskidx_file, dlem_biomeflux_file) {
## read dlem biomeflux using raw method
file_size <- file.info(dlem_biomeflux_file)$size
raw <- readBin(dlem_biomeflux_file, what="raw", n=file_size);
## wrap vector into matrix to accerate processing
nbr_of_records <- length(raw) %/% 61;
raw <-  matrix(raw, nrow=61*4, byrow=FALSE)
## read the first 7 variables of interger type
data_int <- lapply(1:7, FUN=function(var) {
ints <- readBin(con=as.vector(raw[(4*(var - 1) + 1): (4*var), ]), what="integer", size=4,
n=nbr_of_records/4)
return(ints)
})
## read the other variables of float type
data_float <- lapply(8:61, FUN=function(var) {
floats <- readBin(con=as.vector(raw[(4*(var - 1) + 1): (4*var), ]), what="double", size=4,
n=nbr_of_records/4)
return(floats)
})
biomeflux_df <- data.frame(do.call(cbind, data_int), do.call(cbind, data_float))
## var list
var_names <- c("Findex_auto", "Findex_input", "year", "month", "day",
"ecoid","pft","g_gpp", "g_npp", "g_mr", "g_gr", "g_rh",
"g_harvc", "g_harvn", "g_estabC", "g_estabN",
"crope_manage_C","crope_manage_N","g_manureC","g_manureN",
"C_burntflux", "CH4_burntflux", "CO_burntflux", "CO2_burntflux", "NMHC_burntflux",
"C_burntmort", "g_litleachDOC", "g_leach_DOC",
"g_leach_POC", "g_leach_DIC","g_ch4", "g_VOCisop", "g_VOCmono", "g_VOCovoc",
"g_VOCorvoc", "g_VOCco","g_nuptake", "g_NMin", "g_leakN", "g_leachNH4",
"g_leachNO3", "g_litleachDON", "g_leachDON", "g_leachPON",
"g_denitrif", "g_nitrif", "g_nFix", "g_Ndep", "g_NFer", "g_n2o", "g_no",
"g_nh3Emisn", "N_burntflux", "N2O_burntflux", "NOy_burntflux", "NH3_burntflux",
"N_burntmort","g_irrigation", "g_evap","g_intercp","g_trans"
)
names(biomeflux_df) <- var_names
rm(raw)
## read maskidx file
maskidx_r <- readDlemBin(maskidx_file)
## generate raster for a var at a day/mon/year
genVarStack <- function(id) {
biomeflux_df_ecoid <- subset(biomeflux_df, ecoid==id)
ecoid_s <- lapply(1:ncol(biomeflux_df_ecoid), FUN=function(col) {
var_r <- maskidx_r
var_r[var_r >=0] <- 0
var_r[var_r < 0] <- NA
ind <- which((maskidx_r[] %in% biomeflux_df_ecoid$Findex_input)==TRUE)
var_r[ind] <- biomeflux_df_ecoid[, col]
return(var_r)
})
ecoid_s <- do.call(stack, ecoid_s)
cat(id, "\n")
return(ecoid_s)
}
biomeflux_df_s <- lapply(unique(biomeflux_df$ecoid), genVarStack) %>% do.call(stack, .)
names(biomeflux_df_s) <- outer(var_names, unique(biomeflux_df$ecoid), paste, sep="_") %>% as.vector
return(biomeflux_df_s)
}
readDlemBiomeflux("Brandbjerg_maskid.bin","yy2005m1.dlem")
dlem_biomeflux_file
## read dlem biomeflux using raw method
file_size <- file.info(dlem_biomeflux_file)$size
raw <- readBin(dlem_biomeflux_file, what="raw", n=file_size);
## wrap vector into matrix to accerate processing
nbr_of_records <- length(raw) %/% 61;
raw <-  matrix(raw, nrow=61*4, byrow=FALSE)
## read the first 7 variables of interger type
data_int <- lapply(1:7, FUN=function(var) {
ints <- readBin(con=as.vector(raw[(4*(var - 1) + 1): (4*var), ]), what="integer", size=4,
n=nbr_of_records/4)
return(ints)
})
## read the other variables of float type
data_float <- lapply(8:61, FUN=function(var) {
floats <- readBin(con=as.vector(raw[(4*(var - 1) + 1): (4*var), ]), what="double", size=4,
n=nbr_of_records/4)
return(floats)
})
biomeflux_df <- data.frame(do.call(cbind, data_int), do.call(cbind, data_float))
## var list
var_names <- c("Findex_auto", "Findex_input", "year", "month", "day",
"ecoid","pft","g_gpp", "g_npp", "g_mr", "g_gr", "g_rh",
"g_harvc", "g_harvn", "g_estabC", "g_estabN",
"crope_manage_C","crope_manage_N","g_manureC","g_manureN",
"C_burntflux", "CH4_burntflux", "CO_burntflux", "CO2_burntflux", "NMHC_burntflux",
"C_burntmort", "g_litleachDOC", "g_leach_DOC",
"g_leach_POC", "g_leach_DIC","g_ch4", "g_VOCisop", "g_VOCmono", "g_VOCovoc",
"g_VOCorvoc", "g_VOCco","g_nuptake", "g_NMin", "g_leakN", "g_leachNH4",
"g_leachNO3", "g_litleachDON", "g_leachDON", "g_leachPON",
"g_denitrif", "g_nitrif", "g_nFix", "g_Ndep", "g_NFer", "g_n2o", "g_no",
"g_nh3Emisn", "N_burntflux", "N2O_burntflux", "NOy_burntflux", "NH3_burntflux",
"N_burntmort","g_irrigation", "g_evap","g_intercp","g_trans"
)
names(biomeflux_df) <- var_names
rm(raw)
biomeflux_df
write.csv(biomeflux_df,'test.csv')
